{"ast":null,"code":"var _jsxFileName = \"/Users/hugorince/Documents/Projets_perso/maps_api/src/components/Result.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Result(_ref) {\n  _s();\n  let {\n    city\n  } = _ref;\n  const [countries, setCountries] = useState([]);\n  const countryList = () => {\n    let countries = [];\n    console.log('coordonates = ', city);\n    city.map(ville => {\n      const arr = ville.name.split(',');\n      const country = arr[arr.length - 1];\n      if (countries.length > 0 && countries.includes(country) === false) {\n        countries.push(country);\n      }\n    });\n    setCountries(countries.map(country => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)\n      }, country, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }));\n    console.log('countries = ', countries);\n  };\n  useEffect(() => {\n    countryList();\n  }, [city]);\n  if (city[0]) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Countries where there is at leat one city called \", city[0].short, \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-8 items-center justify-center\",\n          children: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n_s(Result, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Result","_ref","_s","city","countries","setCountries","countryList","console","log","map","ville","arr","name","split","country","length","includes","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","short","_c","$RefreshReg$"],"sources":["/Users/hugorince/Documents/Projets_perso/maps_api/src/components/Result.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function Result({city}){\n  const [countries, setCountries] = useState([]);\n  \n  const countryList =  () => {\n    let countries = [];\n    console.log('coordonates = ', city)\n\n    city.map((ville) => {\n        const arr = ville.name.split(',');\n        const country = arr[arr.length -1];\n        if (countries.length > 0 && countries.includes(country) === false){\n          countries.push(country);\n        }\n    })\n\n    setCountries(countries.map((country) => {\n      return <div className=\"flex space-x-4\" key={country}>\n              <h2>{country}</h2>\n            </div>\n    }))  \n    console.log('countries = ', countries)\n  }\n\n  useEffect(()=>{\n    countryList()\n  }, [city])\n    \n    if(city[0]) {\n    return (\n        <>\n        <div className=\"flex flex-col items-center justify-center\">\n          <div>Countries where there is at leat one city called {city[0].short} :</div>\n          <div className=\"flex space-x-8 items-center justify-center\">\n            {countries}\n          </div>\n      </div>\n        </>\n    )\n}\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAQ;EAAAC,EAAA;EAAA,IAAP;IAACC;EAAI,CAAC,GAAAF,IAAA;EACnC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,WAAW,GAAIA,CAAA,KAAM;IACzB,IAAIF,SAAS,GAAG,EAAE;IAClBG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,IAAI,CAAC;IAEnCA,IAAI,CAACM,GAAG,CAAEC,KAAK,IAAK;MAChB,MAAMC,GAAG,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;MACjC,MAAMC,OAAO,GAAGH,GAAG,CAACA,GAAG,CAACI,MAAM,GAAE,CAAC,CAAC;MAClC,IAAIX,SAAS,CAACW,MAAM,GAAG,CAAC,IAAIX,SAAS,CAACY,QAAQ,CAACF,OAAO,CAAC,KAAK,KAAK,EAAC;QAChEV,SAAS,CAACa,IAAI,CAACH,OAAO,CAAC;MACzB;IACJ,CAAC,CAAC;IAEFT,YAAY,CAACD,SAAS,CAACK,GAAG,CAAEK,OAAO,IAAK;MACtC,oBAAOjB,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC9BtB,OAAA;UAAAsB,QAAA,EAAKL;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAM,GADkBT,OAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEvC;IACd,CAAC,CAAC,CAAC;IACHhB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,SAAS,CAAC;EACxC,CAAC;EAEDV,SAAS,CAAC,MAAI;IACZY,WAAW,EAAE;EACf,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAER,IAAGA,IAAI,CAAC,CAAC,CAAC,EAAE;IACZ,oBACIN,OAAA,CAAAE,SAAA;MAAAoB,QAAA,eACAtB,OAAA;QAAKqB,SAAS,EAAC,2CAA2C;QAAAC,QAAA,gBACxDtB,OAAA;UAAAsB,QAAA,GAAK,mDAAiD,EAAChB,IAAI,CAAC,CAAC,CAAC,CAACqB,KAAK,EAAC,IAAE;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC7E1B,OAAA;UAAKqB,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACxDf;QAAS;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACJ,iBACD;EAEX;AACA;AAACrB,EAAA,CAvCuBF,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}