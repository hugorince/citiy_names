{"ast":null,"code":"var _jsxFileName = \"/Users/hugorince/Documents/Projets_perso/maps_api/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap, useLoadScript, MarkerF } from \"@react-google-maps/api\";\nimport { useState } from \"react\";\nimport css from './App.css';\nimport axios from \"axios\";\nimport Map from \"./components/Map\";\nimport Result from \"./components/Result\";\nimport Form from \"./components/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [coordonates, setCoordonates] = useState([]);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_NEXT_PUBLIC_GOOGLE_MAPS_API_KEY\n  });\n  const searchCity = async () => {\n    const gps = [];\n    const url = 'https://api.roadgoat.com/api/v2/destinations/auto_complete?q=' + city;\n    const data = await axios.get(url, {\n      auth: {\n        username: process.env.REACT_APP_ROAD_GOAT_USERNAME,\n        password: process.env.REACT_APP_ROAD_GOAT_PASSWORD\n      }\n    }).then(res => {\n      console.log(res.data.data);\n      res.data.data.map(ville => {\n        if (ville.attributes.short_name.toLowerCase() == city) {\n          gps.push({\n            short: ville.attributes.short_name,\n            name: ville.attributes.long_name,\n            latitude: ville.attributes.latitude,\n            longitude: ville.attributes.longitude\n          });\n        }\n      });\n    });\n    setCoordonates(gps);\n  };\n  let countries = [];\n  coordonates.map(ville => {\n    const arr = ville.name.split(',');\n    const country = arr[arr.length - 1];\n    if (countries.includes(country) === false) {\n      countries.push(country);\n    }\n  });\n  let countryList = countries.map(country => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  });\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        city: city,\n        searchCity: searchCity,\n        setCity: setCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-black\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          data: coordonates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Result, {\n        city: coordonates[0].short,\n        countries: countryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"HyIBeROOPbJ4ULRUrmHby1+KDyQ=\", false, function () {\n  return [useLoadScript];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["GoogleMap","useLoadScript","MarkerF","useState","css","axios","Map","Result","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","city","setCity","coordonates","setCoordonates","isLoaded","googleMapsApiKey","process","env","REACT_APP_NEXT_PUBLIC_GOOGLE_MAPS_API_KEY","searchCity","gps","url","data","get","auth","username","REACT_APP_ROAD_GOAT_USERNAME","password","REACT_APP_ROAD_GOAT_PASSWORD","then","res","console","log","map","ville","attributes","short_name","toLowerCase","push","short","name","long_name","latitude","longitude","countries","arr","split","country","length","includes","countryList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hugorince/Documents/Projets_perso/maps_api/src/App.jsx"],"sourcesContent":["import { GoogleMap, useLoadScript, MarkerF } from \"@react-google-maps/api\";\nimport { useState } from \"react\";\nimport css from './App.css';\nimport axios from \"axios\";\nimport Map from \"./components/Map\";\nimport Result from \"./components/Result\";\nimport Form from \"./components/Form\";\n\n\nexport default function App() {\n  const [city, setCity] = useState('');\n  const [coordonates, setCoordonates] = useState([]);\n  \n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey : process.env.REACT_APP_NEXT_PUBLIC_GOOGLE_MAPS_API_KEY,\n  })\n\n  const searchCity = async () => {\n    const gps = [];\n    const url = 'https://api.roadgoat.com/api/v2/destinations/auto_complete?q=' + city\n    const data = await axios.get(url, {\n      auth : {\n        username: process.env.REACT_APP_ROAD_GOAT_USERNAME,\n        password: process.env.REACT_APP_ROAD_GOAT_PASSWORD\n      }\n    }).then((res) => {\n      console.log(res.data.data)\n      res.data.data.map(ville => {\n       if (ville.attributes.short_name.toLowerCase() == city){\n        gps.push({short: ville.attributes.short_name, name: ville.attributes.long_name, latitude: ville.attributes.latitude, longitude: ville.attributes.longitude})\n       }\n      }\n    )\n  }\n  )\n  setCoordonates(gps)\n  }\n\n  let countries = [];\n\n  coordonates.map((ville) => {\n      const arr = ville.name.split(',');\n      const country = arr[arr.length -1]\n      if (countries.includes(country) === false){\n        countries.push(country);\n      }\n  });\n\n  let countryList = countries.map((country) => {\n    return <div className=\"flex space-x-4\">\n            <h2>{country}</h2>\n          </div>\n})\n\n  if (!isLoaded) return <div>Loading...</div>\n\n  return (\n    <>\n    <div className=\"flex flex-col space-y-8\">\n      <Form city={city} searchCity={searchCity} setCity={setCity}/>\n      <div className=\"border border-black\">\n      <Map data={coordonates}/>\n      </div>\n      <Result city={coordonates[0].short} countries={countryList}/>\n      \n    </div>\n    </>\n    );\n}\n\n\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,aAAa,EAAEC,OAAO,QAAQ,wBAAwB;AAC1E,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM;IAAEgB;EAAS,CAAC,GAAGlB,aAAa,CAAC;IACjCmB,gBAAgB,EAAGC,OAAO,CAACC,GAAG,CAACC;EACjC,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,EAAE;IACd,MAAMC,GAAG,GAAG,+DAA+D,GAAGX,IAAI;IAClF,MAAMY,IAAI,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAACF,GAAG,EAAE;MAChCG,IAAI,EAAG;QACLC,QAAQ,EAAET,OAAO,CAACC,GAAG,CAACS,4BAA4B;QAClDC,QAAQ,EAAEX,OAAO,CAACC,GAAG,CAACW;MACxB;IACF,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACR,IAAI,CAACA,IAAI,CAAC;MAC1BQ,GAAG,CAACR,IAAI,CAACA,IAAI,CAACW,GAAG,CAACC,KAAK,IAAI;QAC1B,IAAIA,KAAK,CAACC,UAAU,CAACC,UAAU,CAACC,WAAW,EAAE,IAAI3B,IAAI,EAAC;UACrDU,GAAG,CAACkB,IAAI,CAAC;YAACC,KAAK,EAAEL,KAAK,CAACC,UAAU,CAACC,UAAU;YAAEI,IAAI,EAAEN,KAAK,CAACC,UAAU,CAACM,SAAS;YAAEC,QAAQ,EAAER,KAAK,CAACC,UAAU,CAACO,QAAQ;YAAEC,SAAS,EAAET,KAAK,CAACC,UAAU,CAACQ;UAAS,CAAC,CAAC;QAC7J;MACD,CAAC,CACF;IACH,CAAC,CACA;IACD9B,cAAc,CAACO,GAAG,CAAC;EACnB,CAAC;EAED,IAAIwB,SAAS,GAAG,EAAE;EAElBhC,WAAW,CAACqB,GAAG,CAAEC,KAAK,IAAK;IACvB,MAAMW,GAAG,GAAGX,KAAK,CAACM,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC;IACjC,MAAMC,OAAO,GAAGF,GAAG,CAACA,GAAG,CAACG,MAAM,GAAE,CAAC,CAAC;IAClC,IAAIJ,SAAS,CAACK,QAAQ,CAACF,OAAO,CAAC,KAAK,KAAK,EAAC;MACxCH,SAAS,CAACN,IAAI,CAACS,OAAO,CAAC;IACzB;EACJ,CAAC,CAAC;EAEF,IAAIG,WAAW,GAAGN,SAAS,CAACX,GAAG,CAAEc,OAAO,IAAK;IAC3C,oBAAO1C,OAAA;MAAK8C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC9B/C,OAAA;QAAA+C,QAAA,EAAKL;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd;EAChB,CAAC,CAAC;EAEA,IAAI,CAAC1C,QAAQ,EAAE,oBAAOT,OAAA;IAAA+C,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;EAE3C,oBACEnD,OAAA,CAAAE,SAAA;IAAA6C,QAAA,eACA/C,OAAA;MAAK8C,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtC/C,OAAA,CAACF,IAAI;QAACO,IAAI,EAAEA,IAAK;QAACS,UAAU,EAAEA,UAAW;QAACR,OAAO,EAAEA;MAAQ;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC7DnD,OAAA;QAAK8C,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eACpC/C,OAAA,CAACJ,GAAG;UAACqB,IAAI,EAAEV;QAAY;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB,eACNnD,OAAA,CAACH,MAAM;QAACQ,IAAI,EAAEE,WAAW,CAAC,CAAC,CAAC,CAAC2B,KAAM;QAACK,SAAS,EAAEM;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEzD,iBACH;AAEP;AAAC/C,EAAA,CA3DuBD,GAAG;EAAA,QAIJZ,aAAa;AAAA;AAAA6D,EAAA,GAJZjD,GAAG;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}