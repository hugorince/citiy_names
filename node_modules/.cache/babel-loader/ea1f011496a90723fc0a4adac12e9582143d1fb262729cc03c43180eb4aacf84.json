{"ast":null,"code":"var _jsxFileName = \"/Users/hugorince/Documents/Projets_perso/maps_api/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { GoogleMap, useLoadScript, MarkerF } from \"@react-google-maps/api\";\nimport { useState } from \"react\";\nimport css from './App.css';\nimport axios from \"axios\";\nimport Map from \"./components/Map\";\nimport Result from \"./components/Result\";\nimport Form from \"./components/Form\";\nimport Title from \"./components/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [coordonates, setCoordonates] = useState([]);\n  const [town, setTown] = useState('');\n  const [countries, setCountries] = useState();\n  const countryList = () => {\n    let countries = [];\n    coordonates.map(ville => {\n      const arr = ville.name.split(',');\n      const country = arr[arr.length - 1];\n      if (countries.includes(country) === false) {\n        countries.push(country);\n      }\n    });\n    setCountries(countries.map(country => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, country, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    }));\n  };\n  const searchCity = async () => {\n    const gps = [];\n    const url = 'https://api.roadgoat.com/api/v2/destinations/auto_complete?q=' + city;\n    const data = await axios.get(url, {\n      auth: {\n        username: process.env.REACT_APP_ROAD_GOAT_USERNAME,\n        password: process.env.REACT_APP_ROAD_GOAT_PASSWORD\n      }\n    }).then(res => {\n      console.log(res.data.data);\n      res.data.data.map(ville => {\n        if (ville.attributes.short_name.toLowerCase() == city) {\n          gps.push({\n            short: ville.attributes.short_name,\n            name: ville.attributes.long_name,\n            latitude: ville.attributes.latitude,\n            longitude: ville.attributes.longitude\n          });\n        }\n      });\n    });\n    setCoordonates(gps);\n    setTown(coordonates[0].short);\n    console.log(town);\n    countryList();\n    console.log(countries);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col space-y-4 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        city: city,\n        searchCity: searchCity,\n        setCity: setCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-black w-9/12\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          data: coordonates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Result, {\n        city: town,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"1NB4ucmKMERz1bUMN4jyutFqX3Q=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["GoogleMap","useLoadScript","MarkerF","useState","css","axios","Map","Result","Form","Title","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","city","setCity","coordonates","setCoordonates","town","setTown","countries","setCountries","countryList","map","ville","arr","name","split","country","length","includes","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchCity","gps","url","data","get","auth","username","process","env","REACT_APP_ROAD_GOAT_USERNAME","password","REACT_APP_ROAD_GOAT_PASSWORD","then","res","console","log","attributes","short_name","toLowerCase","short","long_name","latitude","longitude","_c","$RefreshReg$"],"sources":["/Users/hugorince/Documents/Projets_perso/maps_api/src/App.jsx"],"sourcesContent":["import { GoogleMap, useLoadScript, MarkerF } from \"@react-google-maps/api\";\nimport { useState } from \"react\";\nimport css from './App.css';\nimport axios from \"axios\";\nimport Map from \"./components/Map\";\nimport Result from \"./components/Result\";\nimport Form from \"./components/Form\";\nimport Title from \"./components/Title\";\n\n\nexport default function App() {\n  const [city, setCity] = useState('');\n  const [coordonates, setCoordonates] = useState([]);\n  const [town, setTown] = useState('');\n  const [countries, setCountries] = useState();\n  \n\n\n  const countryList = () => {\n    \n    let countries = [];\n    coordonates.map((ville) => {\n        const arr = ville.name.split(',');\n        const country = arr[arr.length -1];\n        if (countries.includes(country) === false){\n          countries.push(country);\n        }\n    });\n    setCountries(countries.map((country) => {\n      return <div className=\"flex space-x-4\" key={country}>\n              <h2>{country}</h2>\n            </div>\n    }))\n  }\n\n  const searchCity = async () => {\n    const gps = [];\n    const url = 'https://api.roadgoat.com/api/v2/destinations/auto_complete?q=' + city\n    const data = await axios.get(url, {\n      auth : {\n        username: process.env.REACT_APP_ROAD_GOAT_USERNAME,\n        password: process.env.REACT_APP_ROAD_GOAT_PASSWORD\n      }\n    }).then((res) => {\n      console.log(res.data.data)\n      res.data.data.map(ville => {\n       if (ville.attributes.short_name.toLowerCase() == city){\n        gps.push({short: ville.attributes.short_name, name: ville.attributes.long_name, latitude: ville.attributes.latitude, longitude: ville.attributes.longitude})\n       }\n      }\n    )\n  });\n  \n  \n  setCoordonates(gps)\n  setTown(coordonates[0].short)\n  console.log(town)\n  countryList()\n  console.log(countries)\n  \n  }\n\n  \n\n  return (\n    <>\n    <div className=\"flex flex-col space-y-4 items-center\">\n      <Title />\n      <Form city={city} searchCity={searchCity} setCity={setCity}/>\n      <div className=\"border border-black w-9/12\">\n      <Map data={coordonates}/>\n      </div>\n      <Result city={town} countries={countries}/>\n    </div>\n    </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}