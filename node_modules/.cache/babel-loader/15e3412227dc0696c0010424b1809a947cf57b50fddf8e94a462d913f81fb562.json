{"ast":null,"code":"var _jsxFileName = \"/Users/hugorince/Documents/Projets_perso/maps_api/src/components/Result.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Result(_ref) {\n  _s();\n  let {\n    city\n  } = _ref;\n  const [countries, setCountries] = useState([]);\n  if (city[0]) {\n    const countryList = () => {\n      let countries = [];\n      console.log('coordonates = ', coordonates);\n      city.map(ville => {\n        const arr = ville.name.split(',');\n        const country = arr[arr.length - 1];\n        if (countries.length > 0 && countries.includes(country) === false) {\n          countries.push(country);\n        }\n      });\n      setCountries(countries.map(country => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 19\n          }, this)\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 18\n        }, this);\n      }));\n      console.log('countries = ', countries);\n      const ville = coordonates[0].short;\n      setTown(ville);\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Countries where there is at leat one city called \", city[0].short, \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-8 items-center justify-center\",\n          children: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n_s(Result, \"gwqfcWgq2x/FJogDCUDGbZQoAlg=\");\n_c = Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Result","_ref","_s","city","countries","setCountries","countryList","console","log","coordonates","map","ville","arr","name","split","country","length","includes","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","short","setTown","_c","$RefreshReg$"],"sources":["/Users/hugorince/Documents/Projets_perso/maps_api/src/components/Result.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function Result({city}){\n  const [countries, setCountries] = useState([]);\n    if(city[0]) {\n\n      const countryList =  () => {\n    \n        let countries = [];\n        console.log('coordonates = ', coordonates)\n    \n        city.map((ville) => {\n            const arr = ville.name.split(',');\n            const country = arr[arr.length -1];\n            if (countries.length >0 && countries.includes(country) === false){\n              countries.push(country);\n            }\n        })\n        setCountries(countries.map((country) => {\n          return <div className=\"flex space-x-4\" key={country}>\n                  <h2>{country}</h2>\n                </div>\n        }))  \n        console.log('countries = ', countries)\n        const ville = coordonates[0].short\n        setTown(ville)\n      }\n\n\n    return (\n        <>\n        <div className=\"flex flex-col items-center justify-center\">\n      <div>Countries where there is at leat one city called {city[0].short} :</div>\n      <div className=\"flex space-x-8 items-center justify-center\">\n        {countries}\n      </div>\n      </div>\n        </>\n    )\n}\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAQ;EAAAC,EAAA;EAAA,IAAP;IAACC;EAAI,CAAC,GAAAF,IAAA;EACnC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAGQ,IAAI,CAAC,CAAC,CAAC,EAAE;IAEV,MAAMG,WAAW,GAAIA,CAAA,KAAM;MAEzB,IAAIF,SAAS,GAAG,EAAE;MAClBG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,WAAW,CAAC;MAE1CN,IAAI,CAACO,GAAG,CAAEC,KAAK,IAAK;QAChB,MAAMC,GAAG,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;QACjC,MAAMC,OAAO,GAAGH,GAAG,CAACA,GAAG,CAACI,MAAM,GAAE,CAAC,CAAC;QAClC,IAAIZ,SAAS,CAACY,MAAM,GAAE,CAAC,IAAIZ,SAAS,CAACa,QAAQ,CAACF,OAAO,CAAC,KAAK,KAAK,EAAC;UAC/DX,SAAS,CAACc,IAAI,CAACH,OAAO,CAAC;QACzB;MACJ,CAAC,CAAC;MACFV,YAAY,CAACD,SAAS,CAACM,GAAG,CAAEK,OAAO,IAAK;QACtC,oBAAOlB,OAAA;UAAKsB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC9BvB,OAAA;YAAAuB,QAAA,EAAKL;UAAO;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAM,GADkBT,OAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEvC;MACd,CAAC,CAAC,CAAC;MACHjB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,SAAS,CAAC;MACtC,MAAMO,KAAK,GAAGF,WAAW,CAAC,CAAC,CAAC,CAACgB,KAAK;MAClCC,OAAO,CAACf,KAAK,CAAC;IAChB,CAAC;IAGH,oBACId,OAAA,CAAAE,SAAA;MAAAqB,QAAA,eACAvB,OAAA;QAAKsB,SAAS,EAAC,2CAA2C;QAAAC,QAAA,gBAC5DvB,OAAA;UAAAuB,QAAA,GAAK,mDAAiD,EAACjB,IAAI,CAAC,CAAC,CAAC,CAACsB,KAAK,EAAC,IAAE;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC7E3B,OAAA;UAAKsB,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACxDhB;QAAS;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACA,iBACD;EAEX;AACA;AAACtB,EAAA,CAtCuBF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}